#leetcode 1124
题目：

给你一份工作时间表 hours，上面记录着某一位员工每天的工作小时数。

我们认为当员工一天中的工作小时数大于 8 小时的时候，那么这一天就是「劳累的一天」。

所谓「表现良好的时间段」，意味在这段时间内，「劳累的天数」是严格 大于「不劳累的天数」。

请你返回「表现良好时间段」的最大长度。

class Solution:
    def longestWPI(self, hours: List[int]) -> int:
        for i in range(len(hours)):
            if hours[i]>8:
                hours[i]=1
            else:
                hours[i]=-1
        presum=[0]*(len(hours)+1)
        #得到前序数组
        for i in range(1,len(presum)):
            presum[i]=presum[i-1]+hours[i-1]
            
        stack=[0]
        #前序递减排列
        for j in range(1,len(presum)):
            if presum[j] < presum[stack[-1]]:
                stack.append(j)

        #利用单调栈求最大上升时间
        length=0
        for k in range(len(presum)-1,0,-1):
            while stack and presum[k] > presum[stack[-1]]:
                length=max(length,k-stack[-1])
                stack.pop()
            if stack==[]:break
        return length
